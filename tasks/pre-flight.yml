---
- name: pre-flight | Register Java binary
  stat:
    path: "{{ java_binary }}"
  register: jb

- name: pre-flight | Assert that Java binary is executable
  assert:
    that:
      - jb.stat.executable
    fail_msg: "Whoops! Java binary is not executable"
    quiet: true

- name: pre-flight | Search for Ant binary
  stat:
    path: "{{ ant_binary }}"
  register: ab

- name: pre-flight | Assert that Ant binary is executable
  assert:
    that:
      - ab.stat.executable
    fail_msg: "Whoops! Ant binary is not executable"
    quiet: true

- name: pre-flight | Search for NSO signed binary
  find:
    paths: "{{ role_path }}/files"
    patterns: "{{ nso_file_pattern }}"
    use_regex: true
  register: nso_files_dir
  delegate_to: localhost

- name: pre-flight | Assign variable for NSO signed binary
  set_fact:
    nso_signed_binary: "{{ nso_files_dir.files[0].path | basename }}"

- name: pre-flight | Search for NED signed binaries
  find:
    paths: "{{ role_path }}/files"
    patterns: "{{ ned_file_pattern }}"
    use_regex: true
  register: ned_files_dir
  delegate_to: localhost

- name: pre-flight | Assign variable for NED signed binaries
  set_fact:
    nso_ned_signed_binaries: "{{ nso_ned_signed_binaries | default([]) + [ item.path | basename ] }}"
  loop: "{{ ned_files_dir.files }}"

- name: pre-flight | Assign binary working directory for localhost
  set_fact:
    bin_working_dir: "{{ role_path }}/files"
  when: ansible_host == "localhost"

- name: pre-flight | Assign binary working directory for remote hosts
  set_fact:
    bin_working_dir: "/tmp"
  when: ansible_host != "localhost"
