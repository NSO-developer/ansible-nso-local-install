---
- name: netsim | Assert that user defined NETSIM types are supported
  assert:
    that:
      - item.type == 'iosxr' or item.type == 'ios'
    fail_msg: "Whoops! A NETSIM for '{{ item.type }}' is not supported"
    quiet: true
  loop: "{{ nso_netsim }}"

- name: netsim | Register NED packages from NSO {{ nso_version }} runtime
  find:
    paths: "{{ nso_runtime_dir }}/packages"
    file_type: directory
  register: nso_ned_dir

- name: netsim | Register NED NETSIM folders
  stat:
    path: "{{ item.path }}/netsim"
  register: nso_ned_netsim_dir
  loop: "{{ nso_ned_dir.files }}"

- name: netsim | Assert that NED NETSIM folders exist
  assert:
    that:
      - item.stat.exists
    fail_msg: "Whoops! The NETSIM folder for NED {{ item.item.path | basename }} does not exist"
    quiet: true
  loop: "{{ nso_ned_netsim_dir.results }}"

- name: netsim | Set fact for IOS NED package
  set_fact:
    cisco_ios_ned_package: "{{ item.path }}"
  when: "item.path is regex('(ios)(?!xr)')"
  loop: "{{ nso_ned_dir.files }}"
  no_log: true

- name: netsim | Set fact for IOS-XR NED package
  set_fact:
    cisco_iosxr_ned_package: "{{ item.path }}"
  when: "item.path is regex('(iosxr)')"
  loop: "{{ nso_ned_dir.files }}"
  no_log: true

- name: netsim | Create NETSIM directory
  file:
    path: "{{ nso_netsim_dir }}"
    state: directory

- name: netsim | Create NETSIM setup script
  template:
    src: "netsim-env-setup-local.sh.j2"
    dest: "/tmp/netsim-env-setup-local.sh"
    mode: 0755

- name: netsim | Execute NETSIM script
  shell: "source {{ nso_install_dir }}/ncsrc && ./netsim-env-setup-local.sh"
  args:
    chdir: /tmp
    executable: /bin/bash
